apiVersion: v1
kind: Secret
metadata:
  name: ndli-api
  labels:
    app: ndli-api
type: Opaque
data:
  JWT_SECRET: "XXX"
  NEWS_API_KEY: "XXX"
  WEATHER_API_KEY: "XXX"
---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: api
  name: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  strategy: {}
  template:
    metadata:
      labels:
        app: api
    spec:
      initContainers:
      - image: sandhose/ndli-api:latest
        name: migrations
        env:
        - name: DB_NAME
          value: postgres
        - name: DB_USER
          value: postgres
        - name: DB_HOST
          value: ndli-db-postgresql
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ndli-db-postgresql
              key: postgresql-password
        command: ["npm", "run", "migrate"]
      containers:
      - image: sandhose/ndli-api:latest
        name: api
        env:
        - name: PROM_URL
          value: ndli-prometheus-server
        - name: DB_NAME
          value: postgres
        - name: DB_USER
          value: postgres
        - name: DB_HOST
          value: ndli-db-postgresql
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ndli-db-postgresql
              key: postgresql-password
        envFrom:
        - secretRef:
            name: ndli-api
        ports:
        - name: http
          containerPort: 4000
          protocol: TCP
---

apiVersion: v1
kind: Service
metadata:
  labels:
    app: api
  name: api
spec:
  ports:
  - name: http
    port: 4000
    protocol: TCP
    targetPort: 4000
  selector:
    app: api
  type: ClusterIP

---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: api
  annotations:
    ingress.kubernetes.io/ssl-redirect: "true"
  labels:
    app: api
spec:
  tls:
  - secretName: sandhose-fr-tls
  rules:
  - host: ndli-api.sandhose.fr
    http:
      paths:
      - backend:
          serviceName: api
          servicePort: 4000
